# Defines parameters for PMP environment.
# Set this to aws|azure
cloudEnv: aws
shortName: pmp
autoDeploy: true

# This is the fhir endpoint to use when accessing Smile CDR from
# inside the K8s cluster.
# The fhir endpoint will be autogenerated if running this from the
# umbrella Helm Chart and deploying alongside Smile CDR.
# It follows the format: http://<releasename>-scdr-svc-fhir:8000/fhir_request
# If your Smile CDR is deployed using another mechanism, override
# the endpoint URL here.
# fhirClusterEndpointOverride: "http://mysmile-scdr-svc-fhir:8000/fhir_request"

externalConfig:
  smileCdr:
    hostname: "my-cdr-hostname.smilecdr.com"
    fhirPath: "fhir_request"
  cms:
    hostname: "my-cms-hostname.smilecdr.com"
  oauth:
    issuer: https://issuer/path
    cognitoUserPool: my-cognito-user-pool
    # Below is mistakenly not used?
    # altAuthHost: pmp-dev-2.auth.us-east-1.amazoncognito.com
    clientIDs:
      memberPortal: "my-mp-client-id"
      memberPortalAdmin: "my-ap-client-id"
      pmpAwsLogin: "my-al-client-id"

# Specify Image Pull Secrets globally as below, or you can do so in individual components
# If using global secrets...
#  image:
#   imagePullSecrets:
#   # If using sscsi...
#   - type: sscsi
#     provider: aws
#     secretArn: arn:aws:secretsmanager:aws-region:1234567890:secret:my-pmp-image-pull-secret
#   # If using pre-existing k8s secret
#   - type: k8sSecret
#     name: my-directus-secret

components:
  memberPortal:
    enabled: true
    componentType: portal
    resourceSuffix: member-portal
    replicaCount: 1
    image:
      repository: <YOU MUST DEFINE A REPO IN YOUR VALUES FILE>
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"
      # Override or undefine global imagePullSecrets
      #imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    config:
      type: json
      fileName: "config.json"
      filePath: "/usr/share/nginx/html/assets"
      jsonOverride: static # none|static|all
      values:
        environment:
          production: false
          adminMode: false
          IDSystemUri:
            label: GLOBAL.MEMBER_ID_LABEL
            system: urn:system:member
          IDSystemUriAlt:
            label: ""
            system: ""
          adminNotification: false
          # TODO: Check usage of this URL, as it does not seem relevant to the existing environment
          # azureLink: https://portal.azure.com/#blade/Microsoft_AAD_IAM/UsersManagementMenuBlade/AllUsers
          # azureLinkProfile: https://portal.azure.com/#blade/Microsoft_AAD_IAM/UserDetailsMenuBlade/Profile/userId/
          client: PMP
          clientIsP2P: false
          closeWindowOnLogout: false
          codeSystemUrls:
            p2pInternal: http://payer-to-payer-exchange/CodeSystem/p2p-internal-codes
          endSessionPoint: ""
          # TODO: Check usage of this URL, as it does not seem relevant to the existing environment
          # extensionUri: https://nalchbp.org/fhir/StructureDefinition/
          externalIDPSignup: true
          helpDesk: ""
          helpDeskLink: ""
          notificationsEnabled: false
          organizationId: ""
          p2pDefaultOrganizationId: ""
          passwordResetUrl: "tbd"
          privacyPolicyStaff: ""
          sideImage: ./assets/logos/aws_login_photo.jpg
          sideLogo: ""
          topLogo: ./assets/logos/smileP2PLogo.svg
          termsOfServiceStaff: ""
          useCMS: true
          viewMyPlanDetails: false
          zammadUri: ""
        accessControls:
          groups: {}
          permissions:
            view_admin_portal: []
            view_member_portal:
            - '*'
        userObjectKeys:
          # Commenting as this seems like Azure only (GraphAPI)
          # graphAPIAccountStatus: accountEnabled
          # graphAPIBetaLastLogin: signInActivity
          # graphAPIDOBKey: extension_a4ea4d908ab84dc8baa7c5ea379f84f0_DateofBirth
          # graphAPIFirstNameKey: givenName
          # graphAPIIdentityKey: identities
          # graphAPILastNameKey: surname
          # graphAPIMemberIdKey: extension_a4ea4d908ab84dc8baa7c5ea379f84f0_memberid
          # graphAPIOIDKey: id
          # graphAPIPatientIdKey: extension_a4ea4d908ab84dc8baa7c5ea379f84f0_patientid
          # graphAPIPersonIdKey: extension_a4ea4d908ab84dc8baa7c5ea379f84f0_personalrepid
          loginIdentityFirstNameKey: given_name
          loginIdentityFullNameKey: name
          loginIdentityLastNameKey: family_name
        authCodeFlowConfig:
          clientId: ""
          configId: main
          responseType: code
          autoUserInfo: false
          maxIdTokenIatOffsetAllowedInSeconds: 3000
          scope: openid profile
      dynamicValues:
        environment:
          cmsURL:
            type: url
            host: cms
            path: /
          contactUsUrl:
            type: url
            host: cdr
            path: /about-us/contact-us
            # TODO: Check this default, as it's invalid
            # defaultValue: https://www.sbx.aws.smilecdr.com/about-us/contact-us
          groupIDClaim:
            type: idpGroups
            # defaultValue: cognito:groups
          memberCustomTokenParameter:
            type: list[token_parameter]
            parameters:
            - memberId
          customTokenParameters:
            type: list[token_parameter]
            parameters:
            - patientId
          memberIDSystemUri:
            type: url
            host: cdr
            path: /${fhirPath}/patient/identifier
            # TODO: Check this default, as it's invalid (there is no www.sbx or `/fhir/` in that env)
            # defaultValue: https://www.sbx.aws.smilecdr.com/fhir/patient/identifier
          logoutUrl:
            type: url
            host: issuer
            path: /logout?client_id=${oauthClientId}
            # defaultValue: https://pmp-dev-2.auth.us-east-1.amazoncognito.com/logout?client_id=1rtgutvbllbfhqh6nvarkb643g
          p2pmoduleEndpoint:
            type: url
            host: cdr
            path: /p2p/api
          personalRepIDUri:
            type: url
            host: cdr
            path: /${fhirPath}/person/identifier/personalrepresentative_id
            # TODO: Check this default, as it's invalid (there is no www.sbx or `/fhir/` in that env)
            # defaultValue: https://www.sbx.aws.smilecdr.com/fhir/person/identifier/personalrepresentative_id
          termsOfServiceMembers:
            type: url
            host: memberPortal
            path: /b2ctemplates/hpp/termsOfService.html
            # TODO: Check this default, as it's invalid
            # defaultValue: https://memberportal-dev.sbx.aws.smilecdr.com/b2ctemplates/hpp/termsOfService.html
          pmpUserServicesURL:
            type: url
            host: pmpUserServices
            path: /pmp-user-services
            # defaultValue: /pmp-user-services
          privacyPolicyMembers:
            type: url
            host: cdr
            path: /privacy-practices
            # TODO: Check this default, as it's invalid
            # defaultValue: https://www.sbx.aws.smilecdr.com/privacy-practices
          resourceProviderURI:
            type: url
            host: cdr
            path: /${fhirPath}
            # defaultValue:  https://cdr-dev.sbx.aws.smilecdr.com/fhir_request
        authCodeFlowConfig:
          authority:
            type: url
            host: issuer
            # defaultValue:  https://cognito-idp.us-east-1.amazonaws.com/us-east-1_tnv8PeUy6
          clientId:
            type: authId
            id: client

    # hostName: directus.example.com
    # ingressClass: nginx
    serviceAccount:
      # Specifies whether a service account should be created
      create: false
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""
    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: ClusterIP
      port: 80

    ingress:
      enabled: true
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      # defaultHost: pmp-example-default.local
      # defaultPath: /member-portal/
      # Define if different from effective path
      # healthCheckPath: "/healthz"
      hosts:
      - host: pmp-example.local
        paths:
        - path: /member-portal/
          pathType: Prefix


      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - directus-example.local

    extraEnvVars: []
      # An array to add extra environment variables
      # E.g.
      # extraEnvVars:
      #  - name: STORAGE_LOCATIONS
      #    value: "s3"

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

  memberPortalAdmin:
    enabled: true
    componentType: portal
    resourceSuffix: member-portal-admin
    replicaCount: 1
    image:
      repository: <YOU MUST DEFINE A REPO IN YOUR VALUES FILE>
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"
      # Override or undefine global imagePullSecrets
      #imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    # oauthClientId: "my-client-id"

    config:
      type: json
      fileName: "config.json"
      filePath: "/usr/share/nginx/html/assets"
      jsonOverride: static # none|static|all
      values:
        environment:
          production: false
          adminMode: true
          IDSystemUri:
            label: GLOBAL.MEMBER_ID_LABEL
            system: urn:system:member
          IDSystemUriAlt:
            label: ""
            system: ""
          adminNotification: false
          client: PMP
          clientIsP2P: false
          codeSystemUrls:
            p2pInternal: http://payer-to-payer-exchange/CodeSystem/p2p-internal-codes
          endSessionPoint: ""
          externalIDPSignup: false
          helpDesk: ""
          helpDeskLink: ""
          notificationsEnabled: false
          organizationId: ""
          p2pDefaultOrganizationId: ""
          passwordResetUrl: "tbd"
          privacyPolicyStaff: ""
          sideImage: ./assets/logos/aws_login_photo.jpg
          sideLogo: ""
          topLogo: ./assets/logos/smileP2PLogo.svg
          termsOfServiceStaff: ""
          useCMS: true
          viewMyPlanDetails: false
          zammadUri: ""
        accessControls:
          groups:
            csrs: ""
            staffcsrs: ""
            portaladmins: portaladmins
            superusers: ""
          permissions:
            view_admin_portal:
            - csrs
            - staffcsrs
            - portaladmins
            - superusers
            search_members:
            - csrs
            - portaladmins
            - superusers
            search_staff:
            - staffcsrs
            - portaladmins
            - superusers
            search_admins:
            - portaladmins
            - superusers
            view_consent_for_member:
            - csrs
            - portaladmins
            - superusers
            edit_consent_for_member:
            - portaladmins
            - superusers
            view_consent_for_staff:
            - staffcsrs
            - portaladmins
            - superusers
            edit_consent_for_staff:
            - portaladmins
            - superusers
            view_claims_for_member:
            - csrs
            - portaladmins
            - superusers
            view_claims_for_staff:
            - staffcsrs
            - portaladmins
            - superusers
            view_medicalhistory_for_member:
            - portaladmins
            - superusers
            view_medicalhistory_for_staff:
            - portaladmins
            - superusers
            view_healthnotes_for_member:
            - portaladmins
            - superusers
            view_healthnotes_for_staff:
            - portaladmins
            - superusers
            edit_healthnotes_for_member:
            - superusers
            edit_healthnotes_for_staff:
            - superusers
            edit_admins:
            - superusers
            send_notifications:
            - portaladmins
            - superusers
        userObjectKeys:
          loginIdentityFirstNameKey: given_name
          loginIdentityFullNameKey: name
          loginIdentityLastNameKey: family_name
        authCodeFlowConfig:
          clientId: ""
          configId: main
          responseType: code
          autoUserInfo: false
          maxIdTokenIatOffsetAllowedInSeconds: 3000
          scope: openid profile
      dynamicValues:
        environment:
          cmsURL:
            type: url
            host: cms
            path: /
          contactUsUrl:
            type: url
            host: cdr
            path: /about-us/contact-us
            # TODO: Check this default, as it's invalid
            # defaultValue: https://www.sbx.aws.smilecdr.com/about-us/contact-us
          groupIDClaim:
            type: idpGroups
            # defaultValue: cognito:groups
          memberCustomTokenParameter:
            type: list[token_parameter]
            parameters:
            - memberId
          customTokenParameters:
            type: list[token_parameter]
            parameters:
            - patientId
          memberIDSystemUri:
            type: url
            host: cdr
            path: /${fhirPath}/patient/identifier
            # TODO: Check this default, as it's invalid (there is no www.sbx or `/fhir/` in that env)
            # defaultValue: https://www.sbx.aws.smilecdr.com/fhir/patient/identifier
          logoutUrl:
            type: url
            host: issuer
            path: /logout?client_id=${oauthClientId}
          p2pmoduleEndpoint:
            type: url
            host: cdr
            path: /p2p/api
          personalRepIDUri:
            type: url
            host: cdr
            path: /${fhirPath}/person/identifier/personalrepresentative_id
            # TODO: Check this default, as it's invalid (there is no www.sbx or `/fhir/` in that env)
            # defaultValue: https://www.sbx.aws.smilecdr.com/fhir/person/identifier/personalrepresentative_id
          termsOfServiceMembers:
            type: url
            host: memberPortal
            path: /b2ctemplates/hpp/termsOfService.html
            # TODO: Check this default, as it's invalid
            # defaultValue: https://memberportal-dev.sbx.aws.smilecdr.com/b2ctemplates/hpp/termsOfService.html
          pmpUserServicesURL:
            type: url
            host: pmpUserServices
            path: /pmp-user-services
          privacyPolicyMembers:
            type: url
            host: cdr
            path: /privacy-practices
            # TODO: Check this default, as it's invalid
            # defaultValue: https://www.sbx.aws.smilecdr.com/privacy-practices
          resourceProviderURI:
            type: url
            host: cdr
            path: /about-us/contact-us
            # defaultValue:  https://cdr-dev.sbx.aws.smilecdr.com/fhir_request
        authCodeFlowConfig:
          authority:
            type: url
            host: issuer
          clientId:
            type: authId
            id: client

    serviceAccount:
      # Specifies whether a service account should be created
      create: false
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""
    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: ClusterIP
      port: 80

    ingress:
      enabled: true
      annotations: {}
      hosts:
      - host: pmp-example.local
        paths:
        - path: /admin/member-portal/
          pathType: Prefix

      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - directus-example.local

    extraEnvVars: []
      # An array to add extra environment variables
      # E.g.
      # extraEnvVars:
      #  - name: STORAGE_LOCATIONS
      #    value: "s3"

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

  pmpServices:
    enabled: true
    componentType: services
    resourceSuffix: pmp-services
    replicaCount: 1
    envVars:
      # Change this to `cloudvendor` or something.
      # Env typically refers to something like dev/test/uat/prod etc
      env: "AWS"
      IDENTIFIER_SYSTEM_MEMBER: "urn:system:member"
      IDENTIFIER_SYSTEM_PERSONALREP: "urn:system:pr"
      checkActiveCoverage: false
      checkCoverageWithinXDays: 0
      mdmEnabled: false
      coverageDateFormat: "YYYY-MM-DD"
      uniquememberidentifier: "memberidentifier"
      # b2cExtensionsAppClientId: "not_used"

    image:
      repository: <YOU MUST DEFINE A REPO IN YOUR VALUES FILE>
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"
      # Override or undefine global imagePullSecrets
      #imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    secrets:
      pmpServices:
        # type: sscsi
        # provider: aws
        # secretArn: arn:aws:secretsmanager:aws-region:1234567890:secret:my-pmpServices-app-secret
        # secretNameOverride: pmp-services-secret
        type: k8sSecret
        autoCreate:
          enabled: false
          keys:
            userid:
              type: value
              value: my-pmp-services-user-id
            password:
              type: rand32
        envMappings:
          userid: userid
          password: password


    # hostName: directus.example.com
    # ingressClass: nginx
    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""
    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: ClusterIP
      port: 3000

    ingress:
      enabled: true
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      # host: pmp-services-example.local
      # path: /Registration
      # pathType: Prefix
      hosts:
      - host: pmp-services-example.local
        paths:
        - path: /Registration
          pathType: Prefix

      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - directus-example.local

    extraEnvVars: []
      # An array to add extra environment variables
      # E.g.
      # extraEnvVars:
      #  - name: STORAGE_LOCATIONS
      #    value: "s3"

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

  pmpUserServices:
    enabled: true
    componentType: userservices
    resourceSuffix: pmp-user-services
    replicaCount: 1
    oidc:
      authJwksUrl: "testing"
      authAuthority: "testing"
      authClientId: "testing"
      awsCognitoUserPoolId: "testing"
    envVars:
      # OAuth/OIDC Config
      queryType: "AWS_COGNITO"
      # Generic Auth Config
      authOnUserQueryEnabled: true
      authSupportedAlgorithms: "HS256,RS256"
      authGroupKeyName: "cognito:groups"
      authGroupAuthorized: "admins"
      # AWS Cognito configuration
      awsRegion: "us-east-1"
      awsCognitoQueryFilterGivenName: "given_name ^= \"{firstName}\""
      awsCognitoQueryFilterSurname: "family_name ^= \"{lastName}\""
      awsCognitoQueryGroups: "testers,admins"
      # Custom AWS attributes
      awsCognitoMemberIdKey: "custom:memberId"
      awsCognitoPatientIdKey: "custom:patientId"
      awsCognitoPersonIdKey: "custom:personalRepId"
    image:
      repository: <YOU MUST DEFINE A REPO IN YOUR VALUES FILE>
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"
      # Override or undefine global imagePullSecrets
      #imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    # hostName: directus.example.com
    # ingressClass: nginx
    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""
    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: ClusterIP
      port: 3000

    ingress:
      enabled: true
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      host: pmp-user-services-example.local
      # path: /
      # pathType: Prefix
      healthCheckPath: /status
      hosts:
      - host: pmp-user-services-example.local
        paths:
        - path: /
          pathType: Prefix

      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - directus-example.local

    extraEnvVars: []
      # An array to add extra environment variables
      # E.g.
      # extraEnvVars:
      #  - name: STORAGE_LOCATIONS
      #    value: "s3"

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

  pmpAwsLogin:
    enabled: true
    componentType: awslogin
    resourceSuffix: pmp-aws-login
    replicaCount: 1
    image:
      repository: <YOU MUST DEFINE A REPO IN YOUR VALUES FILE>
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"
      # Override or undefine global imagePullSecrets
      #imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    # oauthClientId: "my-client-id"

    config:
      type: json
      fileName: "config.json"
      filePath: "/usr/share/nginx/html/pmp-aws-login/assets"
      jsonOverride: static # none|static|all
      values:
        awsconfig:
          region: aws-region-id
      dynamicValues:
        awsconfig:
          userPoolId:
            type: cognitouserpoolid
          userPoolWebClientId:
            type: authId
            id: client

    # hostName: directus.example.com
    # ingressClass: nginx
    serviceAccount:
      # Specifies whether a service account should be created
      create: false
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""
    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: ClusterIP
      port: 80

    ingress:
      enabled: true
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      # host: pmp-example.local
      # path: /pmp-aws-login
      # pathType: Prefix
      hosts:
      - host: pmp-example.local
        paths:
        - path: /pmp-aws-login
          pathType: Prefix

      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - directus-example.local

    extraEnvVars: []
      # An array to add extra environment variables
      # E.g.
      # extraEnvVars:
      #  - name: STORAGE_LOCATIONS
      #    value: "s3"

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}
