{{- range $theComponentName, $theComponentSpec := include "pmp.components" . | fromYaml -}}
{{- $defaultHostMap := first $theComponentSpec.ingress.hosts -}}
{{- $defaultHost := default $defaultHostMap.host $theComponentSpec.ingress.defaultHost -}}
{{- $defaultPath := ternary (printf "/%s/" .name) (first $defaultHostMap.paths).path (empty $defaultHostMap.paths) -}}
{{- $appPath := ternary $defaultPath (printf "%s" $theComponentSpec.ingress.defaultPath) (empty $theComponentSpec.ingress.defaultPath) -}}
{{- $healthCheckPath := ternary $appPath (printf "%s" $theComponentSpec.ingress.healthCheckPath) (empty $theComponentSpec.ingress.healthCheckPath) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $theComponentSpec.fullName }}
  labels:
    {{- toYaml $theComponentSpec.componentLabels | nindent 4 }}
spec:
  {{- if not $theComponentSpec.autoscaling.enabled }}
  replicas: {{ $theComponentSpec.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- toYaml $theComponentSpec.componentSelectorLabels | nindent 6 }}
  template:
    metadata:
      {{- with $theComponentSpec.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- toYaml $theComponentSpec.componentSelectorLabels | nindent 8 }}
    spec:
      {{- with $theComponentSpec.imagePullSecretsList }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      serviceAccountName: {{ $theComponentSpec.serviceAccountName }}
      securityContext:
        {{- toYaml $theComponentSpec.podSecurityContext | nindent 8 }}
      enableServiceLinks: false
      containers:
      - name: {{ $.Chart.Name }}
        securityContext:
          {{- toYaml $theComponentSpec.securityContext | nindent 10 }}
        image: {{ printf "%s:%s" $theComponentSpec.image.repository (default $.Chart.AppVersion  $theComponentSpec.image.tag) }}
        imagePullPolicy: {{ $theComponentSpec.image.pullPolicy }}
        env:
          {{- $theComponentSpec.envVars| toYaml | nindent 8 }}
        ports:
        - name: http
          containerPort: {{ $theComponentSpec.service.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: {{ $healthCheckPath }}
            port: http
        readinessProbe:
          httpGet:
            path: {{ $healthCheckPath }}
            port: http
        resources:
          {{- toYaml $theComponentSpec.resources | nindent 12 }}
          {{- with (include "component.volumeMounts" $theComponentSpec | fromYamlArray) }}
        volumeMounts:
            {{- toYaml . | nindent 8 }}
          {{- end }}
        {{- with (include "component.volumes" $theComponentSpec | fromYamlArray) }}
      volumes:
        {{- toYaml . | nindent 6 }}
        {{- end }}
      {{- with $theComponentSpec.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $theComponentSpec.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $theComponentSpec.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{ end }}
