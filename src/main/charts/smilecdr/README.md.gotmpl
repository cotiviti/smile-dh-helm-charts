# Smile CDR

{{/* This displays the Chart Header as defined in the Chart Name */}}
{{ template "chart.versionBadge" . }}{{ template "chart.cdrVersionBadge" . }}

{{/* Warns if chart is deprecated  */}}
{{ template "chart.deprecationWarning" . }}

This chart provides a flexible and consistent process to deploy Smile CDR in a self-managed Kubernetes cluster.

It is provided by Smile Digital Health as a starting point for creating a reference implementation of Smile CDR on K8s.
It has been fully tested on Amazon EKS and has growing compatibility for Azure AKS.

{{/* Warns if this is a pre-release */}}
{{ template "chart.pre-release-header" . }}

## Features

* Uses the latest official Smile CDR Docker images
  * Also supports previous Smile CDR versions
* 'Configuration-as-code' management of all Smile CDR module definitions & settings
* Automatic configuration of Kubernetes Services and Ingresses
* Multiple databases supported (Separate DB for cluster manager and one or more persistence DB)
* Flexible JVM tuning with sane defaults
* Adding extra files to the deployment without building new images
* Kafka configuration
* Multiple ingress options with TLS termination at load Balancer
    * [Nginx Ingress Controller](https://kubernetes.github.io/ingress-nginx/)
    * [AWS Load Balancer Controller](https://docs.aws.amazon.com/eks/latest/userguide/aws-load-balancer-controller.html)
    * [Azure Application Gateway Ingress Controller](https://azure.github.io/application-gateway-kubernetes-ingress/)
* [IAM roles for service accounts](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html) -
  Smile CDR pods run with their own IAM role, independent and isolated from other workloads on the cluster.
* [Secrets Store CSI Driver](https://secrets-store-csi-driver.sigs.k8s.io/) - Store secrets in a secure vault, and not in your code.
    * Currently only implemented with [AWS SSCSI Provider](https://github.com/aws/secrets-store-csi-driver-provider-aws) -
    (Uses [AWS Secrets Manager](https://aws.amazon.com/secrets-manager/))
    * Support for other [SSCSI providers](https://secrets-store-csi-driver.sigs.k8s.io/providers.html) may be implemented as required
* Fault Tolerance & High Availability when running 2 or more Pods
* Zero-downtime configuration changes
* Horizontal Auto-Scaling (Within bounds of Smile CDR licence) - to ensure cost effective use of compute resources

### Automated dependency provisioning
You can use this chart to configure and automatically deploy the following components.
If enabled, they will automatically be configured in a production-like configuration, although we do not
recommend using them in production environments at this time.

* Postgres Database - Using the [CrunchyData Postgres Operator](https://access.crunchydata.com/documentation/postgres-operator/v5/)
* Kafka Cluster - Using the [Strimzi Kafka Operator](https://strimzi.io/docs/operators/latest/overview.html)
* Coming soon...
  * MongoDB

> With these components installed in your Kubernetes cluster, you can provision an entire Smile CDR stack,
complete with persistent backed-up database and a Kafka cluster in about 5-10 mins.
May take longer if your K8s cluster needs to scale up nodes first.

# Getting Started
For a guide on how to get up and running, see the Quickstart section in the main [documentation](https://smilecdr-public.gitlab.io/smile-dh-helm-charts)

# Default Values

The below section gives an overview of the default values available. Consult the docs for more detailed information.
{{ template "chart.valuesSection" . }}
