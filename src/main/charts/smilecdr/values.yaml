name: smilecdr
labels:
  client: internal
  application: smilecdr
  env: dev
  version: one

database:
  # Either crunchypgo or external should be set to true. Not both.
  # If using external DB, then Kubernetes secret needs to be set up with
  # the correct credentials. See docs.
  crunchypgo:
    enabled: true
    # Only change this if you change the SmileCDR username in postgresscluster.users
    # userName: smilecdr
  external:
    enabled: false
    # credentialsSource can be k8s or AWS Secrets Manager. Others to be implemented later.
    credentialsSource: k8s
    # TODO: Explain how to configure secret.
    secretName: changeme
    dbType: postgres
    port: 5432

kafka:
  enabled: false
  bootstrapAddress: kafka-example.local
  channelPrefix: SCDR-ENV-
  #TODO: More Kafka properties

specs:
  hostname: smilecdr-example.local
  # Define a common root context path, if required.
  #rootPath: /


# Define modules to be used. Some of these will contain service definitions.
# A service and an ingress rule will be created for modules that use services.
# Canonical endpoint URLs will be generated by _smile-module-helpers.tpl and
# populated in the smilecdr.services variable. These can be consumed by other
# modules that reference them.
modules:
  usedefaultmodules: true

# Define modules in extra values files. This increases readability of the main
# values file, as well as enabling more modular and automated addition of modules
# without having to touch this file
externalModuleDefinitions:
  default: default-modules.yaml

# mappedFiles:
#   testfile.txt:
#     type: configMap
#     configMapBaseName: smilecdr
#     path: /home/smile/smilecdr/classes

# This is where we define multiple node configurations for SmileCDR
# This is a developing feature and there may be breaking changes later on
# For now, it only defines the name, which is used in the properties ConfigMap
# It may later be used to define deployment-specific attributes.
# @ignored
cdrNodes:
  Masterdev:
    enabled: true # Not used yet.

replicaCount: 2
image:
  repository: docker.smilecdr.com/smilecdr
  # Override only if you have created a K8s docker config secret externally to this Helm Chart
  # pullSecrets:
  #   - name: scdr-docker-secrets
  # If you specify credentials here, a K8s docker config secret will be auto generated.
  # Do not use in production environments.
  credentials:
    # Choose one of jsonfile, values, secret
    type: values
    # type: jsonfile
    # type: secret
    values:
      - registry: docker.com
        username: user
        password: pass
    pullSecrets:
      - name: scdr-docker-secretssss
    jsonfile: "misc/docker-config.json"
  pullPolicy: IfNotPresent
  # Override the image tag. Default is the chart appVersion.
  tag: '2022.08.R03'

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  # We won't define annotations here as they are defined in the helper template
  # annotations: {}
  # Define any extra annotations. Please keep cloud vendor specific annotations in the
  # helper template
  extraAnnotations: {}

ingress:
  enabled: true
  # Select the cloud vendor and GW/NLB controller being used.
  # Currently supported values are:
  # aws-lbc-nlb - AWS Load Balancer Controller (Network Load Balancer)
  # azure-appgw - Azure Application Gateway
  type: aws-lbc-nlb
  #type: azure-appgw
  # We won't define annotations here as they are defined in the helper template
  # annotations: {}
  # Define any extra annotations. Please keep cloud vendor specific annotations in the
  # helper template
  extraAnnotations: {}

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: "2"
    memory: 4Gi
  requests:
    cpu: "2"
    memory: 4Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
