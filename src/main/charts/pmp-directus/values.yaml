replicaCount: 1
image:
  repository: directus/directus
  pullPolicy: IfNotPresent
  # By default takes the tag from the Chart.yaml. Can be overridden here.
  # tag: "9.23.1"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

shortName: directus

# redis:
#   enabled: false

database:
  crunchypgo:
    enabled: false
    users:
    - name: "directus"
  external:
    enabled: false
  envVarNames:
    host: DB_HOST
    password: DB_PASSWORD

secrets:
  app:
    type: k8sSecret
    secretNameOverride: directus-app-secret
    autoCreate:
      enabled: false
      keys:
        instanceKey:
          type: uuidv4
        instanceSecret:
          type: uuidv4
        adminEmail:
          type: value
          value: admin@smilecdr.com
        adminPassword:
          type: rand32
        appUserEmail:
          type: value
          value: memberportaldirectusaccount@smilecdr.com
        appUserPassword:
          type: rand32
    envMappings:
      instanceKey: KEY
      instanceSecret: SECRET
      adminEmail: ADMIN_EMAIL
      adminPassword: ADMIN_PASSWORD
      appUserEmail: PMP_APP_USER_EMAIL
      appUserPassword: PMP_APP_USER_PASSWORD
  # app:
  #   type: sscsi
  #   provider: aws
  #   secretArn: "arn:aws:secretsmanager:us-east-1:1234567890:secret:directusSecret"
  #   envMappings:
  #     instanceKey: KEY
  #     instanceSecret: SECRET
  #     adminEmail: ADMIN_EMAIL
  #     adminPassword: ADMIN_PASSWORD
  #     appUserEmail: PMP_APP_USER_EMAIL
  #     appUserPassword: PMP_APP_USER_PASSWORD

idpSignupLink: ""

fileStorage:
  s3:
    enabled: false
    bucketName: "my-directus-bucket"
    bucketRegion: "us-east-1"
    bucketPrefix: "directus-files"

mappedFiles: {}

# hostName: directus.example.com
# ingressClass: nginx
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
  # annotations:
  #   # kubernetes.io/ingress.class: nginx
  #   # kubernetes.io/tls-acme: "true"
  #   nginx.ingress.kubernetes.io/enable-cors: "true"
  #   # nginx.ingress.kubernetes.io/cors-allow-origin: "https://pmp-dev.sbx.aws.smilecdr.com"
  #   nginx.ingress.kubernetes.io/cors-allow-origin: "*"
  #   nginx.ingress.kubernetes.io/cors-allow-credentials: "false"
  hosts:
    - host: directus-example.local
      paths:
      - path: /
        pathType: Prefix

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - directus-example.local

localaccess:
  enabled: false
  port: 4200

# An array to add extra environment variables
# E.g.
# extraEnvVars:
#  - name: STORAGE_LOCATIONS
#    value: "s3"
extraEnvVars:
- name: "DB_SSL"
  value: "true"
- name: "NODE_TLS_REJECT_UNAUTHORIZED"
  value: "0"
- name: "CACHE_SYSTEM_TTL"
  value: "10000"
- name: "CORS_ENABLED"
  value: "true"

extraVolumes: []
extraVolumeMounts: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
