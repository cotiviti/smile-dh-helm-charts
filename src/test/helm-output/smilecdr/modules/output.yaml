---
# Source: smilecdr/templates/scdr-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scdr-docker-pull-secrets
  namespace: default
  labels:
    helm.sh/chart: smilecdr-1.0.0-pre.2
    app.kubernetes.io/name: smilecdr
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.08.R03"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/dockerconfigjson
data:
  dockerconfigjson: eyJhdXRocyI6eyJkb2NrZXIuY29tIjp7ImF1dGgiOiJkWE5sY2pwd1lYTnoifX19
---
# Source: smilecdr/templates/smilecdr-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-scdr
  namespace: default
  labels:
    helm.sh/chart: smilecdr-1.0.0-pre.2
    app.kubernetes.io/name: smilecdr
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.08.R03"
    app.kubernetes.io/managed-by: Helm
data:
  cdr-config-Master.properties: |-
    ################################################################################
    # Node Configuration
    ################################################################################
    node.id                                                        =Masterdev

    # Broker options are EMBEDDED_ACTIVEMQ, REMOTE_ACTIVEMQ, KAFKA, NONE

    module.clustermgr.config.messagebroker.type                         =EMBEDDED_ACTIVEMQ

    ################################################################################
    # Other Modules are Configured Below
    ################################################################################

    # The following setting controls where module configuration is ultimately stored.
    # When set to "DATABASE" (which is the default), the clustermgr configuration is
    # always read but the other modules are stored in the database upon the first
    # launch and their configuration is read from the database on subsequent
    # launches. When set to "PROPERTIES", values in this file are always used.
    #
    # In other words, in DATABASE mode, the module definitions below this line are
    # only used to seed the database upon the very first startup of the sytem, and
    # will be ignored after that. In PROPERTIES mode, the module definitions below
    # are read every time the system starts, and existing definitions and config are
    # overwritten by what is in this file.
    #
    node.propertysource                                            =PROPERTIES

    ################################################################################
    # ENDPOINT: Web Admin
    ################################################################################
    module.admin_web.type 	= ADMIN_WEB
    module.admin_web.requires.SECURITY_IN_UP 	= local_security
    module.admin_web.config.context_path 	= /
    module.admin_web.config.https_forwarding_assumed 	= true
    module.admin_web.config.port 	= 9100
    module.admin_web.config.respect_forward_headers 	= true
    module.admin_web.config.tls.enabled 	= false
    ################################################################################
    # Modified Cluster Manager Configuration
    ################################################################################
    module.clustermgr.config.audit_log.request_headers_to_store 	= Content-Type,Host
    module.clustermgr.config.db.driver 	= POSTGRES_9_5
    module.clustermgr.config.db.schema_update_mode 	= UPDATE
    module.clustermgr.config.db.url 	= jdbc:postgresql://#{env['DB_URL']}:5432/#{env['DB_DATABASE']}?sslmode=require
    module.clustermgr.config.stats.heartbeat_persist_frequency_ms 	= 15000
    module.clustermgr.config.stats.stats_cleanup_frequency_ms 	= 300000
    module.clustermgr.config.stats.stats_persist_frequency_ms 	= 60000
    module.clustermgr.config.db.password 	= #{env['DB_PASS']}
    module.clustermgr.config.db.username 	= #{env['DB_USER']}
---
# Source: smilecdr/templates/scdr-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-scdr-svc-admin-web
  namespace: default
  labels:
    helm.sh/chart: smilecdr-1.0.0-pre.2
    app.kubernetes.io/name: smilecdr
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.08.R03"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  type: ClusterIP
  ports:
    - name: admin-web
      port: 9100
      targetPort: 9100
      protocol: TCP
  selector:
    app.kubernetes.io/name: smilecdr
    app.kubernetes.io/instance: release-name
---
# Source: smilecdr/templates/scdr-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-scdr
  namespace: default
  labels:
    helm.sh/chart: smilecdr-1.0.0-pre.2
    app.kubernetes.io/name: smilecdr
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.08.R03"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: smilecdr
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: smilecdr-1.0.0-pre.2
        app.kubernetes.io/name: smilecdr
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2022.08.R03"
        app.kubernetes.io/managed-by: Helm
    spec:
      imagePullSecrets:
        - name: scdr-docker-pull-secrets
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: smilecdr
          securityContext:
            {}
          image: "docker.smilecdr.com/smilecdr:2022.08.R03"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: "2"
              memory: 4Gi
          env:
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: release-name-pguser-smilecdr
                  key: host
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: release-name-pguser-smilecdr
                  key: dbname
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-pguser-smilecdr
                  key: user
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: release-name-pguser-smilecdr
                  key: password
          ports:
            - name: admin-web
              containerPort: 9100
              protocol: TCP
          volumeMounts:
            - name: scdr-config-release-name
              mountPath: /home/smile/smilecdr/classes/cdr-config-Master.properties
              subPath: cdr-config-Master.properties
            - name: scdr-tls-cert-release-name
              mountPath: "/etc/ssl/smile"
              readOnly: true
      volumes:
        - name: scdr-config-release-name
          configMap:
            name: release-name-scdr
        - name: scdr-tls-cert-release-name
          secret:
            secretName: cdr-dev-tls-cert
      restartPolicy: Always
---
# Source: smilecdr/templates/scdr-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-scdr
  namespace: default
  labels:
    helm.sh/chart: smilecdr-1.0.0-pre.2
    app.kubernetes.io/name: smilecdr
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.08.R03"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
    - host: smilecdr-example.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-scdr-svc-admin-web
                port:
                  number: 9100
---
# Source: smilecdr/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-smilecdr-test-connection"
  labels:
    helm.sh/chart: smilecdr-1.0.0-pre.2
    app.kubernetes.io/name: smilecdr
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.08.R03"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['smilecdr-admin_web:9100']
      resources:
        limits:
          cpu: 10m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
  restartPolicy: Never
